Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d5c18060-a8ad-402b-81f4-cacc5efcd029\" name=\"Changes\" comment=\"Primera implementacion del strategy\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Strategy/Cash.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Strategy/Cash.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Model/Strategy/CreditCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Model/Strategy/CreditCard.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qN5Etzwp3XSkx1dlLnv6YRw65d\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/Users/nicolaslazaro/Documents/Analista Sistemas 3er año/EDI3/AlquileresFeb25/AlquileresFebrero&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\AlquileresFebrero\\src\\Controller\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\AlquileresFebrero\\src\" />\r\n    </key>\r\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\r\n      <recent name=\"Controller.RentableObjects\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"Controller\" />\r\n      <recent name=\"Model.Factory\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"AlquileresFebrero\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d5c18060-a8ad-402b-81f4-cacc5efcd029\" name=\"Changes\" comment=\"\" />\r\n      <created>1734490085154</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734490085154</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Primera implementacion del factory\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734594293838</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734594293838</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Primera implementacion del strategy\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734678246610</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734678246610</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Primera implementacion del factory\" />\r\n    <MESSAGE value=\"Primera implementacion del strategy\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Primera implementacion del strategy\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,9 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d5c18060-a8ad-402b-81f4-cacc5efcd029" name="Changes" comment="Primera implementacion del strategy">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Strategy/Cash.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Strategy/Cash.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Model/Strategy/CreditCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Model/Strategy/CreditCard.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DAO/MemoryRentableObjectDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DAO/MemoryRentableObjectDAO.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,6 +22,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectColorInfo">{
@@ -35,16 +38,16 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/nicolaslazaro/Documents/Analista Sistemas 3er año/EDI3/AlquileresFeb25/AlquileresFebrero&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "5af55d48",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/Users/nicolaslazaro/Documents/Analista Sistemas 3er año/EDI3/AlquileresFeb25/AlquileresFebrero"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Usuario\Desktop\AlquileresFebrero\src\Controller" />
@@ -105,4 +108,12 @@
     <MESSAGE value="Primera implementacion del strategy" />
     <option name="LAST_COMMIT_MESSAGE" value="Primera implementacion del strategy" />
   </component>
+  <component name="XDebuggerManager">
+    <pin-to-top-manager>
+      <pinned-members>
+        <PinnedItemInfo parentTag="DAO.MemoryClientTypeDAO" memberName="typeList" />
+        <PinnedItemInfo parentTag="Controller.ClientTypeController" memberName="dao" />
+      </pinned-members>
+    </pin-to-top-manager>
+  </component>
 </project>
\ No newline at end of file
Index: src/DAO/MemoryRentableObjectDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DAO;\r\nimport Model.Entities.RentableObjects.RentableObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MemoryRentableObjectDAO implements DAO<RentableObject> {\r\n\r\n    private List<RentableObject> rentableObjectList = new ArrayList<>();\r\n\r\n    private static MemoryRentableObjectDAO RentableObjectMemoryDAO;\r\n    public static MemoryRentableObjectDAO getInstance(){\r\n        if(RentableObjectMemoryDAO == null){\r\n            RentableObjectMemoryDAO = new MemoryRentableObjectDAO();\r\n        }\r\n        return RentableObjectMemoryDAO;\r\n    }\r\n\r\n    @Override\r\n    public List<RentableObject> getAll() {\r\n        return rentableObjectList;\r\n    }\r\n\r\n    public List<RentableObject> getAvalibleRentableObjectList(){\r\n        List<RentableObject> rentableObjects = new ArrayList<>();\r\n        for (RentableObject rentableObject : rentableObjectList){\r\n            if (rentableObject.isAvalible()){\r\n                rentableObjects.add(rentableObject);\r\n            }\r\n        }\r\n        return  rentableObjects;\r\n    }\r\n\r\n    @Override\r\n    public RentableObject getById(long id) {\r\n        RentableObject rentableObject = null;\r\n        try{\r\n            for (RentableObject obj : rentableObjectList) {\r\n                if (obj.getId() == id) {\r\n                    rentableObject = obj;\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            System.out.println(\"Id no encontrado\" + e);\r\n        }\r\n        return rentableObject;\r\n    }\r\n\r\n    @Override\r\n    public RentableObject save(RentableObject object) {\r\n        rentableObjectList.add(object);\r\n        return object;\r\n    }\r\n\r\n    @Override\r\n    public RentableObject updateById(long id, RentableObject object) {\r\n        getById(id).setName(object.getName());\r\n        getById(id).setDescription(object.getDescription());\r\n        getById(id).setPricePerDay(object.getPricePerDay());\r\n        getById(id).setAvalible(object.isAvalible());\r\n        return getById(id);\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteById(long id) {\r\n        return rentableObjectList.removeIf(obj -> obj.getId() == id);\r\n    }\r\n\r\n    @Override\r\n    public boolean exportData() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean importData() {\r\n        return false;\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/DAO/MemoryRentableObjectDAO.java b/src/DAO/MemoryRentableObjectDAO.java
--- a/src/DAO/MemoryRentableObjectDAO.java	
+++ b/src/DAO/MemoryRentableObjectDAO.java	
@@ -1,5 +1,6 @@
 package DAO;
 import Model.Entities.RentableObjects.RentableObject;
+import Model.Entities.RentableObjects.Vehicle;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -58,6 +59,8 @@
         getById(id).setDescription(object.getDescription());
         getById(id).setPricePerDay(object.getPricePerDay());
         getById(id).setAvalible(object.isAvalible());
+
+
         return getById(id);
     }
 
